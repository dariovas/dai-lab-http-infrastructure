version: '3'

services:
  static_web_server:
    build: staticWebServer
    volumes:
      - ./staticWebServer/config/log:/var/log/nginx
    labels:
      # Explicitly tell traefik to expose this container.
      - "traefik.enable=true"
      # Defines the domain to which the service responds.
      - "traefik.http.routers.staticWeb-router.rule=Host(`localhost`)"
      # Defines the entrypoint to which the router listen to.
      - "traefik.http.routers.staticWeb-router.entrypoints=websecure"
      # Enables the tls.
      - "traefik.http.routers.staticWeb-router.tls=true"
      # Routes all requests to the service static-router.
      - "traefik.http.routers.staticWeb-router.service=staticWeb-service"
      # Defines the port on which the service responds.
      - "traefik.http.services.staticWeb-service.loadbalancer.server.port=80"
    deploy:
      replicas: 2
  api_server:
    build: api_server
    labels:
      # Explicitly tell traefik to expose this container.
      - "traefik.enable=true"
      # Defines the path-prefixed domain to which the service responds.
      - "traefik.http.routers.api-router.rule=Host(`localhost`) && PathPrefix(`/api`)"
      # Defines the entrypoint to which the router listen to.
      - "traefik.http.routers.api-router.entrypoints=websecure"
      # Enables the tls.
      - "traefik.http.routers.api-router.tls=true"
      # Routes all requests to the service api-service.
      - "traefik.http.routers.api-router.service=api-service"
      # Enables the sticky session for the api-service.
      - "traefik.http.services.api-service.loadbalancer.sticky=true"
      # Sets the cookie name to identify the session and enables the security on it.
      - "traefik.http.services.api-service.loadbalancer.sticky.cookie.name=apicookie"
      - "traefik.http.services.api-service.loadbalancer.sticky.cookie.secure=true"
      # Defines the port on which the service responds.
      - "traefik.http.services.api-service.loadbalancer.server.port=80"
    deploy:
      replicas: 3
  reverse_proxy:
    container_name: reverse_proxy
    image: traefik
    command:
      # Uses the configuration file.
      - "--configFile=/etc/traefik/traefik.yaml"
      # Enables access logs
      - "--accesslog=true"
      - "--accesslog.filePath=/var/log/traefik/access.log"
      - "--accesslog.fields.names.StartUTC=drop"
    ports:
      # Exposes the HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    environment:
      - TZ=Europe/Zurich
    volumes:
      # So that Traefik can listen to the Docker events.
      - /var/run/docker.sock:/var/run/docker.sock
      # Mounts a local volume to have access to the logs.
      - ./reverse_proxy/log:/var/log/traefik/
      # Mounts the certificates directory to the container.
      - ./reverse_proxy/certificates:/etc/traefik/certificates
      # Mounts the Traefik configuration file to the container.
      - ./reverse_proxy/traefik.yaml:/etc/traefik/traefik.yaml
  management_ui:
    image: portainer/portainer-ce
    container_name: management_ui
    restart: always
    ports:
      - "9000:9000"
    volumes:
      # Adds access to the containers.
      - /var/run/docker.sock:/var/run/docker.sock
      # Stores the portainer data.
      - ./management_ui/portainer_data:/data
